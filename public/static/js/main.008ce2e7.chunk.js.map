{"version":3,"sources":["config/firebase.js","Containers/Chat/index.js","store/action/index.js","Containers/Home/index.js","config/router.js","App.js","store/reducer/AppReducer.js","store/reducer/index.js","store/index.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Chat","this","props","get_users","console","log","users","user","current_user","name","alt","src","profile","email","Component","connect","state","dispatch","database","ref","child","on","data","push","val","type","payload","Home","onClick","facebook_login","history","provider","auth","FacebookAuthProvider","signInWithPopup","then","result","credential","accessToken","create_User","displayName","photoURL","uid","set","alert","catch","error","code","message","AppRouter","exact","path","component","App","INITIAL_STATE","AppReducer","action","store","createStore","applyMiddleware","thunk","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.008ce2e7.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/database'\r\n\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyCv6QiXhizyAg-CquVSfCrpHerGER7EJkI\",\r\n    authDomain: \"chat-app-demo-cfe65.firebaseapp.com\",\r\n    databaseURL: \"https://chat-app-demo-cfe65.firebaseio.com\",\r\n    projectId: \"chat-app-demo-cfe65\",\r\n    storageBucket: \"chat-app-demo-cfe65.appspot.com\",\r\n    messagingSenderId: \"503378303014\",\r\n    appId: \"1:503378303014:web:9a4bef31601429dfca6ee7\",\r\n    measurementId: \"G-4LY7N47NWM\"\r\n  };\r\n\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n\r\n  export default firebase;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport {get_users} from '../../store/action'\r\n\r\nclass Chat extends Component {\r\n    componentDidMount(){\r\n        this.props.get_users();\r\n    }\r\n    render() {\r\n        console.log(\"firebase users => \", this.props.users)\r\n        let user = this.props.current_user;\r\n        console.log(user)\r\n\r\n        return (\r\n            <div>\r\n                <h4>Welcome {user.name} </h4>\r\n                <img alt=\"profile\" src={user.profile} />\r\n                <h5>Email:{ user.email}</h5>\r\n                <div>\r\n                    <div>\r\n                        <h4>Chat Users:</h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStaeToProps = (state) => ({\r\n    current_user: state.current_user,\r\n    users: state.users,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    get_users: () => dispatch(get_users()), \r\n})\r\n\r\nexport default connect(mapStaeToProps, mapDispatchToProps)(Chat);","import firebase from '../../config/firebase'\r\n\r\nconst facebook_login = (history) => {\r\n    return (dispatch)=>{\r\n        var provider = new firebase.auth.FacebookAuthProvider();\r\n        firebase.auth().signInWithPopup(provider).then(function(result) {\r\n            // This gives you a Facebook Access Token. You can use it to access the Facebook API.\r\n            var token = result.credential.accessToken;\r\n            // The signed-in user info.\r\n            var user = result.user;\r\n\r\n            let create_User = {\r\n                name:user.displayName,\r\n                email: user.email,\r\n                profile: user.photoURL,\r\n                uid: user.uid\r\n            }\r\n            firebase.database().ref('/').child(`users/${user.uid}`).set(create_User)\r\n            .then(()=> {\r\n                dispatch({type:\"SETUSER\", payload: create_User})\r\n                alert(\"User Login Successfull\");\r\n                history.push('/chat')\r\n            })\r\n            // ...\r\n          }).catch(function(error) {\r\n            // Handle Errors here.\r\n            var errorCode = error.code;\r\n            var errorMessage = error.message;\r\n            // The email of the user's account used.\r\n            var email = error.email;\r\n            // The firebase.auth.AuthCredential type that was used.\r\n            var credential = error.credential;\r\n            // ...\r\n          });\r\n    }\r\n}\r\n\r\nconst get_users = () =>{\r\n    return(dispatch) => {\r\n        let users = [];\r\n        firebase.database().ref('/').child('users').on('child_added', (data)=> {\r\n           users.push(data.val())\r\n        })\r\n        dispatch({type:\"SETFIREBASEUSERS\", payload: users})\r\n    }\r\n}\r\n\r\nexport{\r\n    facebook_login,\r\n    get_users,\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {facebook_login} from '../../store/action/index'\r\n\r\n\r\n\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Home </h1>\r\n                <button onClick={() => this.props.facebook_login(this.props.history)}>Facebook Login</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>({\r\n    \r\n})\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    facebook_login: (data) => dispatch(facebook_login(data)) \r\n})\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Home);","import React, { Component } from 'react'\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\r\nimport Chat from '../Containers/Chat/index'\r\nimport Home from '../Containers/Home/index'\r\n\r\n\r\nclass AppRouter extends Component {\r\n    render(){\r\n        return(\r\n            <Router>\r\n                <Route exact path='/' component={Home} />\r\n                <Route exact path='/chat' component={Chat} />\r\n            </Router>\r\n        )\r\n    }\r\n}\r\nexport default AppRouter;","import './App.css';\nimport AppRouter from './config/router'\n\n\nfunction App() {\n  return (\n   <AppRouter>\n   </AppRouter>\n  );\n}\n\nexport default App;\n","const INITIAL_STATE = {\r\n    users: [],\r\n    current_user: \"\",\r\n\r\n}\r\n\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    console.log(\"app==>\", action);\r\n    switch (action.type) {\r\n        case \"SETUSER\":\r\n            return ({\r\n                ...state,\r\n                current_user: action.payload,\r\n            })\r\n        case \"SETFIREBASEUSERS\":\r\n            return ({\r\n                ...state,\r\n                users: [...state.users, action.payload],\r\n            })\r\n        default:\r\n            return state\r\n    }\r\n}","\r\n// import {combineReducers} from 'redux';\r\nimport AppReducer from './AppReducer'\r\n\r\n\r\n\r\nexport default AppReducer;","import AppReducer from './reducer'\r\nimport {createStore, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk'\r\n\r\n\r\n\r\nconst store = createStore(AppReducer,applyMiddleware(thunk));\r\n\r\n\r\n\r\nexport default store;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './store';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}