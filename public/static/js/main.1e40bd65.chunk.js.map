{"version":3,"sources":["config/firebase.js","Containers/Chat/index.js","store/action/index.js","Containers/Home/index.js","config/router.js","App.js","store/reducer/AppReducer.js","store/reducer/index.js","store/index.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Chat","chat","user","setState","chat_user","console","log","current_user","props","uid_merge","state","uid","get_messages","chats","message","chatmessages","loading","this","database","ref","child","push","name","uid1","uid2","on","val","get_users","users","alt","src","profile","email","style","display","width","backgroundColor","map","v","i","onClick","Object","keys","length","value","onChange","e","target","type","placeholder","sendmsg","Component","connect","dispatch","data","payload","Home","facebook_login","history","provider","auth","FacebookAuthProvider","signInWithPopup","then","result","credential","accessToken","create_User","displayName","photoURL","set","alert","catch","error","code","AppRouter","exact","path","component","App","INITIAL_STATE","AppReducer","action","store","createStore","applyMiddleware","thunk","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1e40bd65.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/database'\r\n\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyCv6QiXhizyAg-CquVSfCrpHerGER7EJkI\",\r\n    authDomain: \"chat-app-demo-cfe65.firebaseapp.com\",\r\n    databaseURL: \"https://chat-app-demo-cfe65.firebaseio.com\",\r\n    projectId: \"chat-app-demo-cfe65\",\r\n    storageBucket: \"chat-app-demo-cfe65.appspot.com\",\r\n    messagingSenderId: \"503378303014\",\r\n    appId: \"1:503378303014:web:9a4bef31601429dfca6ee7\",\r\n    measurementId: \"G-4LY7N47NWM\"\r\n  };\r\n\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n\r\n  export default firebase;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { get_users } from '../../store/action'\r\nimport firebase from '../../config/firebase'\r\n\r\nclass Chat extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            chat_user: {},\r\n            chats: [],\r\n            message: \"\",\r\n            chatmessages: null,\r\n            loading: false,\r\n        }\r\n    }\r\n\r\n\r\n    sendmsg(){\r\n        let user = this.props.current_user;\r\n        let chat_user = this.state.chat_user;\r\n        let uid_merge = this.uid_merge(user.uid,chat_user.uid)\r\n        console.log(uid_merge);\r\n        firebase.database().ref('/').child(`chat/${uid_merge}`).push({\r\n            message: this.state.message,\r\n            name: user.name,\r\n            uid: user.uid,\r\n        })\r\n        this.state.chats.push({\r\n            message: this.state.message\r\n        })\r\n        this.setState({\r\n            chat: this.state.chats,\r\n            message: \"\",\r\n        })\r\n    }\r\n    uid_merge(uid1,uid2){\r\n        if(uid1 < uid2){\r\n            return uid1 + uid2\r\n        }\r\n        else{\r\n            return uid2 + uid1\r\n        }\r\n    }\r\n    chat= (user) => {\r\n        this.setState({\r\n            chat_user: user\r\n        })\r\n        console.log(user);\r\n        let current_user = this.props.current_user;\r\n        let chat_user = this.state.chat_user;\r\n        let uid_merge = this.uid_merge(current_user.uid,user.uid)\r\n        console.log(current_user);\r\n        console.log(uid_merge);\r\n        this.get_messages(uid_merge)\r\n       \r\n\r\n        \r\n        \r\n    }\r\n    get_messages(uid){\r\n        firebase.database().ref('/').child(`chat/${uid}`).on('child_added', (message) =>{\r\n            console.log(\"message=>\", message.val());\r\n            this.state.chats.push({\r\n                message: message.val()\r\n            })\r\n            this.setState({\r\n                chats: this.state.chats,\r\n            })\r\n        })\r\n    }\r\n    componentDidMount() {\r\n        this.props.get_users();\r\n    }\r\n    \r\n    render() {\r\n\r\n        console.log(\"firebase users => \", this.props.users)\r\n        let user = this.props.current_user;\r\n        console.log(user)\r\n\r\n        return (\r\n            <div>\r\n                <h4>Welcome {user.name} </h4>\r\n                <img alt=\"profile\" src={user.profile} />\r\n                <h5>Email:{user.email}</h5>\r\n                <div style={{ display: \"flex\" }}>\r\n                    <div style={{ width: \"50%\", backgroundColor: \"green\" }}>\r\n                        <h4>Chat Users:</h4>\r\n                        <ul>\r\n                            {this.props.users.map((v, i) => {\r\n                                return v.uid !== user.uid && <li key={i}><img alt=\"\" src={v.profile} width=\"20\" /> {v.name} <button onClick={() => this.chat(v)}>chat</button></li>\r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n                    <div style={{ width: \"50%\", backgroundColor: \"yellow\" }}>\r\n                        <h4>Chat</h4>\r\n                        {Object.keys(this.state.chat_user).length ?\r\n                            <div>\r\n                                <h4><img alt=\"\" src={this.state.chat_user.profile} width=\"20\" />{this.state.chat_user.name}</h4>\r\n                                <ul>\r\n                                    {this.state.chats.map((v, i) => {\r\n                                        return <li key={i}>{v.message}</li>\r\n                                    })}\r\n                                </ul>\r\n\r\n                                <input value={this.state.message} onChange={(e) => this.setState({message: e.target.value})} type=\"text\" placeholder=\"enter your message\" />\r\n                                <button onClick={()=> this.sendmsg()}>send</button>\r\n                            </ div>\r\n                            :\r\n                            <h4>No User</h4>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStaeToProps = (state) => ({\r\n    current_user: state.current_user,\r\n    users: state.users,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    get_users: () => dispatch(get_users()),\r\n})\r\n\r\nexport default connect(mapStaeToProps, mapDispatchToProps)(Chat);","import firebase from '../../config/firebase'\r\n\r\nconst facebook_login = (history) => {\r\n    return (dispatch)=>{\r\n        var provider = new firebase.auth.FacebookAuthProvider();\r\n        firebase.auth().signInWithPopup(provider).then(function(result) {\r\n            // This gives you a Facebook Access Token. You can use it to access the Facebook API.\r\n            var token = result.credential.accessToken;\r\n            // The signed-in user info.\r\n            var user = result.user;\r\n\r\n            let create_User = {\r\n                name:user.displayName,\r\n                email: user.email,\r\n                profile: user.photoURL,\r\n                uid: user.uid\r\n            }\r\n            firebase.database().ref('/').child(`users/${user.uid}`).set(create_User)\r\n            .then(()=> {\r\n                dispatch({type:\"SETUSER\", payload: create_User})\r\n                alert(\"User Login Successfull\");\r\n                history.push('/chat')\r\n            })\r\n            // ...\r\n          }).catch(function(error) {\r\n            // Handle Errors here.\r\n            var errorCode = error.code;\r\n            var errorMessage = error.message;\r\n            // The email of the user's account used.\r\n            var email = error.email;\r\n            // The firebase.auth.AuthCredential type that was used.\r\n            var credential = error.credential;\r\n            // ...\r\n          });\r\n    }\r\n}\r\n\r\nconst get_users = () =>{\r\n    return(dispatch) => {\r\n        let users = [];\r\n        firebase.database().ref('/').child('users').on('child_added', (data)=> {\r\n           users.push(data.val())\r\n        })\r\n        dispatch({type:\"SETFIREBASEUSERS\", payload: users})\r\n    }\r\n}\r\n\r\nexport{\r\n    facebook_login,\r\n    get_users,\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {facebook_login} from '../../store/action/index'\r\n\r\n\r\n\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Home </h1>\r\n                <button onClick={() => this.props.facebook_login(this.props.history)}>Facebook Login</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>({\r\n    \r\n})\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    facebook_login: (data) => dispatch(facebook_login(data)) \r\n})\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Home);","import React, { Component } from 'react'\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\r\nimport Chat from '../Containers/Chat/index'\r\nimport Home from '../Containers/Home/index'\r\n\r\n\r\nclass AppRouter extends Component {\r\n    render(){\r\n        return(\r\n            <Router>\r\n                <Route exact path='/' component={Home} />\r\n                <Route exact path='/chat' component={Chat} />\r\n            </Router>\r\n        )\r\n    }\r\n}\r\nexport default AppRouter;","import './App.css';\nimport AppRouter from './config/router'\n\n\nfunction App() {\n  return (\n   <AppRouter>\n   </AppRouter>\n  );\n}\n\nexport default App;\n","const INITIAL_STATE = {\r\n    users: [],\r\n    current_user: {},\r\n\r\n}\r\n\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    console.log(\"app==>\", action);\r\n    switch (action.type) {\r\n        case \"SETUSER\":\r\n            return ({\r\n                ...state,\r\n                current_user: action.payload,\r\n            })\r\n        case \"SETFIREBASEUSERS\":\r\n            return ({\r\n                ...state,\r\n                users: action.payload,\r\n            })\r\n        default:\r\n            return state\r\n    }\r\n}","\r\n// import {combineReducers} from 'redux';\r\nimport AppReducer from './AppReducer'\r\n\r\n\r\n\r\nexport default AppReducer;","import AppReducer from './reducer'\r\nimport {createStore, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk'\r\n\r\n\r\n\r\nconst store = createStore(AppReducer,applyMiddleware(thunk));\r\n\r\n\r\n\r\nexport default store;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './store';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}